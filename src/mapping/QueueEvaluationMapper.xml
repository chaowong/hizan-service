<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.se.dao.QueueEvaluationDao">
	<resultMap type="com.se.entity.QueueEvaluation" id="QueueEvaluationRM">
		<id column="id" property="id" />
		<result column="queueid" property="queueid" />
		<result column="indexid" property="indexid" />
		<result column="score" property="score" />
		<result column="content" property="content" />
		<result column="createdby" property="createdby" />
		<result column="createdon" property="createdon" />
	</resultMap>
	<!-- _____________________________________________________________________________ 全部字段 -->
	<sql id="COLUMNS">
		id,queueid,indexid,score,content,createdby,createdon
	</sql>

	<!-- _____________________________________________________________________________ 1.add -->

	<insert id="add" parameterType="com.se.entity.QueueEvaluation">
		insert into se_queue_evaluation (id,queueid,indexid,score,content,createdby,createdon)
		values (#{id},#{queueid},#{indexid},#{score},#{content},#{createdby},#{createdon})
	</insert>

	<!-- ______________________________________________________________________________ 2.modify -->

	<update id="modify" parameterType="com.se.entity.QueueEvaluation">
		update se_queue_evaluation 
		<set>
			<if test="queueid != null">queueid = #{queueid},</if>
			<if test="indexid != null">indexid = #{indexid},</if>
			<if test="score != null">score = #{score},</if>
			<if test="content != null">content = #{content},</if>
			<if test="createdby != null">createdby = #{createdby},</if>
			<if test="createdon != null">createdon = #{createdon}</if>
		</set>
		where id = #{id}
	</update>

	<!-- _____________________________________________________________________________ 3.removeById -->

	<delete id="removeById" parameterType="string">
		delete from se_queue_evaluation where id=#{id} 
	</delete>

	<!-- _____________________________________________________________________________ 4.removeByIds -->

	<delete id="removeByIds" parameterType="List">
		delete from se_queue_evaluation where id in 
		<foreach collection = "list" index="index"  item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<!-- _____________________________________________________________________________ 5.listAll -->

	<select id="listAll" resultMap="QueueEvaluationRM">
		select <include refid="COLUMNS" /> from se_queue_evaluation
	</select>

	<!-- _____________________________________________________________________________ 6.listBy -->

	<select id="listBy" parameterType="map" resultMap="QueueEvaluationRM">
		select <include refid="COLUMNS" /> from se_queue_evaluation
		<where>
			<if test="id != null">and id = #{id}</if>
			<if test="queueid != null">and queueid = #{queueid}</if>
			<if test="indexid != null">and indexid = #{indexid}</if>
			<if test="score != null">and score = #{score}</if>
			<if test="content != null">and content = #{content}</if>
			<if test="createdby != null">and createdby = #{createdby}</if>
			<if test="createdon != null">and createdon = #{createdon}</if>
		</where>
	</select>

	<!-- _____________________________________________________________________________ 7.pageBy -->

	<select id="pageBy" parameterType="map" resultMap="QueueEvaluationRM">
		select <include refid="COLUMNS" /> from se_queue_evaluation
		<where>
			<if test="id != null">and id = #{id}</if>
			<if test="queueid != null">and queueid = #{queueid}</if>
			<if test="indexid != null">and indexid = #{indexid}</if>
			<if test="score != null">and score = #{score}</if>
			<if test="content != null">and content = #{content}</if>
			<if test="createdby != null">and createdby = #{createdby}</if>
			<if test="createdon != null">and createdon = #{createdon}</if>
		</where>
		order by id desc
		limit #{startIdx},#{limit}
	</select>

   <!-- _____________________________________________________________________________ 8.1.findByMap -->

	<select id="findByMap" parameterType="map" resultMap="QueueEvaluationRM">
		select <include refid="COLUMNS" /> from se_queue_evaluation
		<where>
			<if test="id != null">and id = #{id}</if>
			<if test="queueid != null">and queueid = #{queueid}</if>
			<if test="indexid != null">and indexid = #{indexid}</if>
			<if test="score != null">and score = #{score}</if>
			<if test="content != null">and content = #{content}</if>
			<if test="createdby != null">and createdby = #{createdby}</if>
			<if test="createdon != null">and createdon = #{createdon}</if>
		</where>
	</select>
	
	<!-- _____________________________________________________________________________ 8.2.findBy -->

	<select id="findBy" parameterType="com.se.entity.QueueEvaluation" resultMap="QueueEvaluationRM">
		select <include refid="COLUMNS" /> from se_queue_evaluation
		<where>
			<if test="id != null">and id = #{id}</if>
			<if test="queueid != null">and queueid = #{queueid}</if>
			<if test="indexid != null">and indexid = #{indexid}</if>
			<if test="score != null">and score = #{score}</if>
			<if test="content != null">and content = #{content}</if>
			<if test="createdby != null">and createdby = #{createdby}</if>
			<if test="createdon != null">and createdon = #{createdon}</if>
		</where>
	</select>

	<!-- _____________________________________________________________________________ 9.findById -->

	<select id="findById" parameterType="string" resultMap="QueueEvaluationRM">
		select <include refid="COLUMNS" /> from se_queue_evaluation where id = #{id}
	</select>

	<!-- _____________________________________________________________________________ 10.countAll -->

	<select id="countAll" resultType="integer">
		select count(id) from se_queue_evaluation
	</select>

	<!-- _____________________________________________________________________________ 11.countBy -->

	<select id="countBy" parameterType="map" resultType="integer">
		select count(id) from se_queue_evaluation
		<where>
			<if test="id != null">and id = #{id}</if>
			<if test="queueid != null">and queueid = #{queueid}</if>
			<if test="indexid != null">and indexid = #{indexid}</if>
			<if test="score != null">and score = #{score}</if>
			<if test="content != null">and content = #{content}</if>
			<if test="createdby != null">and createdby = #{createdby}</if>
			<if test="createdon != null">and createdon = #{createdon}</if>
		</where>
	</select>
	<!-- ******************扩展Mapper****************** -->
</mapper>
