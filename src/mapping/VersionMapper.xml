<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.se.dao.VersionDao">
	<resultMap type="com.se.entity.Version" id="VersionRM">
		<id column="id" property="id" />
		<result column="content" property="content" />
		<result column="version" property="version" />
		<result column="apptype" property="apptype" />
		<result column="isforced" property="isforced" />
		<result column="download" property="download" />
		<result column="createdon" property="createdon" />
	</resultMap>
	<!-- _____________________________________________________________________________ 全部字段 -->
	<sql id="COLUMNS">
		id,content,version,apptype,isforced,download,createdon
	</sql>


	<!-- _____________________________________________________________________________ 1.add -->

	<insert id="add" parameterType="com.se.entity.Version">
		insert into se_version (id,content,version,apptype,isforced,download,createdon)
		values (#{id},#{content},#{version},#{apptype},#{isforced},#{download},#{createdon})
	</insert>

	<!-- ______________________________________________________________________________ 2.modify -->

	<update id="modify" parameterType="com.se.entity.Version">
		update se_version 
		<set>
			<if test="content != null">content = #{content},</if>
			<if test="version != null">version = #{version},</if>
			<if test="apptype != null">apptype = #{apptype},</if>
			<if test="isforced != null">isforced = #{isforced},</if>
			<if test="download != null">download = #{download},</if>
			<if test="createdon != null">createdon = #{createdon}</if>
		</set>
		where id = #{id}
	</update>

	<!-- _____________________________________________________________________________ 3.removeById -->

	<delete id="removeById" parameterType="string">
		delete from se_version where id=#{id} 
	</delete>

	<!-- _____________________________________________________________________________ 4.removeByIds -->

	<delete id="removeByIds" parameterType="List">
		delete from se_version where id in 
		<foreach collection = "list" index="index"  item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

	<!-- _____________________________________________________________________________ 5.listAll -->

	<select id="listAll" resultMap="VersionRM">
		select <include refid="COLUMNS" /> from se_version order by createdon desc
	</select>

	<!-- _____________________________________________________________________________ 6.listBy -->

	<select id="listBy" parameterType="map" resultMap="VersionRM">
		select <include refid="COLUMNS" /> from se_version
		<where>
			<if test="id != null">and id = #{id}</if>
			<if test="content != null">and content = #{content}</if>
			<if test="version != null">and version = #{version}</if>
			<if test="apptype != null">and apptype = #{apptype}</if>
			<if test="isforced != null">and isforced = #{isforced}</if>
			<if test="download != null">and download = #{download}</if>
			<if test="createdon != null">and createdon = #{createdon}</if>
		</where>
		order by createdon desc
	</select>

	<!-- _____________________________________________________________________________ 7.pageBy -->

	<select id="pageBy" parameterType="map" resultMap="VersionRM">
		select <include refid="COLUMNS" /> from se_version
		<where>
			<if test="id != null">and id = #{id}</if>
			<if test="content != null">and content = #{content}</if>
			<if test="version != null">and version = #{version}</if>
			<if test="apptype != null">and apptype = #{apptype}</if>
			<if test="isforced != null">and isforced = #{isforced}</if>
			<if test="download != null">and download = #{download}</if>
			<if test="createdon != null">and createdon = #{createdon}</if>
		</where>
		order by createdon desc
		limit #{startIdx},#{limit}
	</select>

	<!-- _____________________________________________________________________________ 8.1.findByMap -->

	<select id="findByMap" parameterType="map" resultMap="VersionRM">
		select <include refid="COLUMNS" /> from se_version
		<where>
			<if test="id != null">and id = #{id}</if>
			<if test="content != null">and content = #{content}</if>
			<if test="version != null">and version = #{version}</if>
			<if test="apptype != null">and apptype = #{apptype}</if>
			<if test="isforced != null">and isforced = #{isforced}</if>
			<if test="download != null">and download = #{download}</if>
			<if test="createdon != null">and createdon = #{createdon}</if>
		</where>
		order by createdon desc
	</select>

	<!-- _____________________________________________________________________________ 8.2.findBy -->

	<select id="findBy" parameterType="com.se.entity.Version" resultMap="VersionRM">
		select <include refid="COLUMNS" /> from se_version
		<where>
			<if test="id != null">and id = #{id}</if>
			<if test="content != null">and content = #{content}</if>
			<if test="version != null">and version = #{version}</if>
			<if test="apptype != null">and apptype = #{apptype}</if>
			<if test="isforced != null">and isforced = #{isforced}</if>
			<if test="download != null">and download = #{download}</if>
			<if test="createdon != null">and createdon = #{createdon}</if>
		</where>
		order by createdon desc
	</select>

	<!-- _____________________________________________________________________________ 9.findById -->

	<select id="findById" parameterType="string" resultMap="VersionRM">
		select <include refid="COLUMNS" /> from se_version where id = #{id}
	</select>

	<!-- _____________________________________________________________________________ 10.countAll -->

	<select id="countAll" resultType="integer">
		select count(id) from se_version
	</select>

	<!-- _____________________________________________________________________________ 11.countBy -->

	<select id="countBy" parameterType="map" resultType="integer">
		select count(id) from se_version
		<where>
			<if test="id != null">and id = #{id}</if>
			<if test="content != null">and content = #{content}</if>
			<if test="version != null">and version = #{version}</if>
			<if test="apptype != null">and apptype = #{apptype}</if>
			<if test="isforced != null">and isforced = #{isforced}</if>
			<if test="download != null">and download = #{download}</if>
			<if test="createdon != null">and createdon = #{createdon}</if>
		</where>
	</select>
	<!-- ******************扩展Mapper****************** -->
</mapper>
